// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shopimax.API.Data;

namespace Shopimax.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065");

            modelBuilder.Entity("Shopimax.API.Models.LineItem", b =>
                {
                    b.Property<int>("LineItemID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("LineItemQuantity");

                    b.Property<decimal>("LineItemTotalPrice")
                        .HasColumnType("Money");

                    b.Property<int>("OrderID");

                    b.Property<int?>("ProductID");

                    b.HasKey("LineItemID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("LineItems");
                });

            modelBuilder.Entity("Shopimax.API.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("OrderCancelled");

                    b.Property<DateTime>("OrderDate");

                    b.Property<int?>("ShopID");

                    b.Property<int>("UserID");

                    b.HasKey("OrderID");

                    b.HasIndex("ShopID");

                    b.HasIndex("UserID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Shopimax.API.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("ProductAvailable");

                    b.Property<string>("ProductAvailableQty");

                    b.Property<string>("ProductCategory");

                    b.Property<string>("ProductName");

                    b.Property<decimal>("ProductRate");

                    b.Property<int>("ShopID");

                    b.HasKey("ProductID");

                    b.HasIndex("ShopID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Shopimax.API.Models.Shop", b =>
                {
                    b.Property<int>("ShopID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ShopCity");

                    b.Property<string>("ShopCountry");

                    b.Property<string>("ShopName");

                    b.Property<string>("ShopState");

                    b.Property<string>("ShopStreet");

                    b.Property<string>("ShopZip");

                    b.HasKey("ShopID");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("Shopimax.API.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("UserEmail");

                    b.Property<string>("UserName");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Shopimax.API.Models.LineItem", b =>
                {
                    b.HasOne("Shopimax.API.Models.Order", "Orders")
                        .WithMany("LineItems")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Shopimax.API.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("ProductID");
                });

            modelBuilder.Entity("Shopimax.API.Models.Order", b =>
                {
                    b.HasOne("Shopimax.API.Models.Shop", "Shops")
                        .WithMany("Orders")
                        .HasForeignKey("ShopID");

                    b.HasOne("Shopimax.API.Models.User", "Users")
                        .WithMany("Orders")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Shopimax.API.Models.Product", b =>
                {
                    b.HasOne("Shopimax.API.Models.Shop", "Shops")
                        .WithMany("Products")
                        .HasForeignKey("ShopID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
